<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Tcl Built-In Commands - glob manual page</title>
<link rel="stylesheet" href="../docs.css" type="text/css" media=
"all">
</head>
<body>
<div class="banner">
<table width="100%" border="0" cellspacing="0" cellpadding="3">
<tr>
<td align="left"><a target="_blank" href=
"http://www.activestate.com/activetcl"><img src=
"../../images/ActiveTcl.gif" border="0" align="left" alt=
"ActiveTcl"></a> </td>
<td align="center" class="heading">ActiveTcl User Guide</td>
<td align="right"><a target="_blank" href=
"http://www.activestate.com"><img src="../../images/AS_logo.gif"
border="0" align="right" alt="ActiveState Software Inc."></a> </td>
</tr>
</table>
</div>

<br>
<h2><a href="../contents.htm">Tcl/Tk Documentation</a>
<small>&gt;</small> <a href="contents.htm">TclCmd</a>
<small>&gt;</small> glob</h2>

<h3><a href="../UserCmd/contents.htm">Tcl/Tk Applications</a> | <a
href="../TclCmd/contents.htm">Tcl Commands</a> | <a href=
"../TkCmd/contents.htm">Tk Commands</a> | <a href=
"../TclLib/contents.htm">Tcl Library</a> | <a href=
"../TkLib/contents.htm">Tk Library</a></h3>

<dl>
<dd><a href="glob.htm#M2" name="L660">NAME</a> 

<dl>
<dd>glob - Return names of files that match patterns</dd>
</dl>
</dd>

<dd><a href="glob.htm#M3" name="L661">SYNOPSIS</a> 

<dl>
<dd><b>glob</b> ?<i>switches</i>? ?<i>pattern ...</i>?</dd>
</dl>
</dd>

<dd><a href="glob.htm#M4" name="L662">DESCRIPTION</a></dd>

<dd><a href="glob.htm#M5" name="L663">OPTIONS</a> 

<dl class="options">
<dd><a href="glob.htm#M6" name="L664"><b>-directory</b>
<i>directory</i></a></dd>

<dd><a href="glob.htm#M7" name="L665"><b>-join</b></a></dd>

<dd><a href="glob.htm#M8" name="L666"><b>-nocomplain</b></a></dd>

<dd><a href="glob.htm#M9" name="L667"><b>-path</b>
<i>pathPrefix</i></a></dd>

<dd><a href="glob.htm#M10" name="L668"><b>-tails</b></a></dd>

<dd><a href="glob.htm#M11" name="L669"><b>-types</b>
<i>typeList</i></a></dd>

<dd><a href="glob.htm#M12" name="L670"><b>--</b></a></dd>
</dl>
</dd>

<dd><a href="glob.htm#M13" name="L671">GLOBBING PATTERNS</a> 

<dl class="globbing patterns">
<dd><a href="glob.htm#M14" name="L672"><b>?</b></a></dd>

<dd><a href="glob.htm#M15" name="L673"><b>*</b></a></dd>

<dd><a href="glob.htm#M16" name=
"L674"><b>[</b><i>chars</i><b>]</b></a></dd>

<dd><a href="glob.htm#M17" name="L675"><b>\</b><i>x</i></a></dd>

<dd><a href="glob.htm#M18" name=
"L676"><b>{</b><i>a</i><b>,</b><i>b</i><b>,</b><i>...</i>}</a></dd>
</dl>
</dd>

<dd><a href="glob.htm#M19" name="L677">WINDOWS PORTABILITY
ISSUES</a></dd>

<dd><a href="glob.htm#M20" name="L678">EXAMPLES</a></dd>

<dd><a href="glob.htm#M21" name="L679">SEE ALSO</a></dd>

<dd><a href="glob.htm#M22" name="L680">KEYWORDS</a></dd>
</dl>

<h3><a name="M2">NAME</a></h3>

glob - Return names of files that match patterns 

<h3><a name="M3">SYNOPSIS</a></h3>

<b>glob</b> ?<i>switches</i>? ?<i>pattern ...</i>?<br>
<h3><a name="M4">DESCRIPTION</a></h3>

This command performs file name &ldquo;globbing&rdquo; in a fashion
similar to the csh shell or bash shell. It returns a list of the
files whose names match any of the <i>pattern</i> arguments. No
particular order is guaranteed in the list, so if a sorted list is
required the caller should use <b><a href=
"../TclCmd/lsort.htm">lsort</a></b>. 

<h4><a name="M5">OPTIONS</a></h4>

If the initial arguments to <b>glob</b> start with <b>-</b> then
they are treated as switches. The following switches are currently
supported: 

<dl class="options">
<dt><a name="M6"><b>-directory</b> <i>directory</i></a></dt>

<dd>Search for files which match the given patterns starting in the
given <i>directory</i>. This allows searching of directories whose
name contains glob-sensitive characters without the need to quote
such characters explicitly. This option may not be used in
conjunction with <b>-path</b>, which is used to allow searching for
complete file paths whose names may contain glob-sensitive
characters.</dd>

<dt><a name="M7"><b>-join</b></a></dt>

<dd>The remaining pattern arguments, after option processing, are
treated as a single pattern obtained by joining the arguments with
directory separators.</dd>

<dt><a name="M8"><b>-nocomplain</b></a></dt>

<dd>Allows an empty list to be returned without error; without this
switch an error is returned if the result list would be empty.</dd>

<dt><a name="M9"><b>-path</b> <i>pathPrefix</i></a></dt>

<dd>Search for files with the given <i>pathPrefix</i> where the
rest of the name matches the given patterns. This allows searching
for files with names similar to a given file (as opposed to a
directory) even when the names contain glob-sensitive characters.
This option may not be used in conjunction with <b>-directory</b>.
For example, to find all files with the same root name as $path,
but differing extensions, you should use &ldquo;<b>glob -path [file
rootname $path] .*</b>&rdquo; which will work even if <b>$path</b>
contains numerous glob-sensitive characters.</dd>

<dt><a name="M10"><b>-tails</b></a></dt>

<dd>Only return the part of each file found which follows the last
directory named in any <b>-directory</b> or <b>-path</b> path
specification. Thus &ldquo;<b>glob -tails -directory $dir
*</b>&rdquo; is equivalent to &ldquo;<b>set pwd [pwd]; cd $dir;
glob *; cd $pwd</b>&rdquo;. For <b>-path</b> specifications, the
returned names will include the last path segment, so
&ldquo;<b>glob -tails -path [file rootname ~/foo.tex] .*</b>&rdquo;
will return paths like <b>foo.aux foo.bib foo.tex</b> etc.</dd>

<dt><a name="M11"><b>-types</b> <i>typeList</i></a></dt>

<dd>Only list files or directories which match <i>typeList</i>,
where the items in the list have two forms. The first form is like
the -type option of the Unix find command: <i>b</i> (block special
file), <i>c</i> (character special file), <i>d</i> (directory),
<i>f</i> (plain file), <i>l</i> (symbolic link), <i>p</i> (named
pipe), or <i>s</i> (socket), where multiple types may be specified
in the list. <b>Glob</b> will return all files which match at least
one of the types given. Note that symbolic links will be returned
both if <b>-types l</b> is given, or if the target of a link
matches the requested type. So, a link to a directory will be
returned if <b>-types d</b> was specified. 

<p>The second form specifies types where all the types given must
match. These are <i>r</i>, <i>w</i>, <i>x</i> as file permissions,
and <i>readonly</i>, <i>hidden</i> as special permission cases. On
the Macintosh, MacOS types and creators are also supported, where
any item which is four characters long is assumed to be a MacOS
type (e.g. <b><a href="../TkCmd/text.htm">TEXT</a></b>). Items
which are of the form <i>{macintosh type XXXX}</i> or <i>{macintosh
creator XXXX}</i> will match types or creators respectively.
Unrecognized types, or specifications of multiple MacOS
types/creators will signal an error.</p>

<p>The two forms may be mixed, so <b>-types {d f r w}</b> will find
all regular files OR directories that have both read AND write
permissions. The following are equivalent:</p>

<pre>
<b>glob -type d *</b>
<b>glob */</b>
</pre>

<p>except that the first case doesn't return the trailing
&ldquo;/&rdquo; and is more platform independent.</p>
</dd>

<dt><a name="M12"><b>--</b></a></dt>

<dd>Marks the end of switches. The argument following this one will
be treated as a <i>pattern</i> even if it starts with a
<b>-</b>.</dd>
</dl>

<h4><a name="M13">GLOBBING PATTERNS</a></h4>

The <i>pattern</i> arguments may contain any of the following
special characters, which are a superset of those supported by
<b><a href="../TclCmd/string.htm">string match</a></b>: 

<dl class="globbing patterns">
<dt><a name="M14"><b>?</b></a></dt>

<dd>Matches any single character.</dd>

<dt><a name="M15"><b>*</b></a></dt>

<dd>Matches any sequence of zero or more characters.</dd>

<dt><a name="M16"><b>[</b><i>chars</i><b>]</b></a></dt>

<dd>Matches any single character in <i>chars</i>. If <i>chars</i>
contains a sequence of the form <i>a</i><b>-</b><i>b</i> then any
character between <i>a</i> and <i>b</i> (inclusive) will
match.</dd>

<dt><a name="M17"><b>\</b><i>x</i></a></dt>

<dd>Matches the character <i>x</i>.</dd>

<dt><a name=
"M18"><b>{</b><i>a</i><b>,</b><i>b</i><b>,</b><i>...</i>}</a></dt>

<dd>Matches any of the sub-patterns <i>a</i>, <i>b</i>, etc.</dd>
</dl>

<p>On Unix, as with csh, a &ldquo;.&rdquo;&nbsp; at the beginning
of a file's name or just after a &ldquo;/&rdquo; must be matched
explicitly or with a {} construct, unless the <b>-types hidden</b>
flag is given (since &ldquo;.&rdquo;&nbsp; at the beginning of a
file's name indicates that it is hidden). On other platforms, files
beginning with a &ldquo;.&rdquo;&nbsp; are handled no differently
to any others, except the special directories &ldquo;.&rdquo;&nbsp;
and &ldquo;..&rdquo;&nbsp; which must be matched explicitly (this
is to avoid a recursive pattern like &ldquo;glob -join * * *
*&rdquo; from recursing up the directory hierarchy as well as
down). In addition, all &ldquo;/&rdquo; characters must be matched
explicitly.</p>

<p>If the first character in a <i>pattern</i> is &ldquo;~&rdquo;
then it refers to the home directory for the user whose name
follows the &ldquo;~&rdquo;. If the &ldquo;~&rdquo; is followed
immediately by &ldquo;/&rdquo; then the value of the HOME
environment variable is used.</p>

<p>The <b>glob</b> command differs from csh globbing in two ways.
First, it does not sort its result list (use the <b><a href=
"../TclCmd/lsort.htm">lsort</a></b> command if you want the list
sorted). Second, <b>glob</b> only returns the names of files that
actually exist; in csh no check for existence is made unless a
pattern contains a ?, *, or [] construct.</p>

<p>When the <b>glob</b> command returns relative paths whose
filenames start with a tilde &ldquo;~&rdquo; (for example through
<b>glob *</b> or <b>glob -tails</b>, the returned list will not
quote the tilde with &ldquo;./&rdquo;. This means care must be
taken if those names are later to be used with <b><a href=
"../TclCmd/file.htm">file join</a></b>, to avoid them being
interpreted as absolute paths pointing to a given user's home
directory.</p>

<h3><a name="M19">WINDOWS PORTABILITY ISSUES</a></h3>

For Windows UNC names, the servername and sharename components of
the path may not contain ?, *, or [] constructs. On Windows NT, if
<i>pattern</i> is of the form
&ldquo;<b>~</b><i>username</i><b>@</b><i>domain</i>&rdquo;, it
refers to the home directory of the user whose account information
resides on the specified NT domain server. Otherwise, user account
information is obtained from the local computer. On Windows 95 and
98, <b>glob</b> accepted patterns like &ldquo;.../&rdquo; and
&ldquo;..../&rdquo; for successively higher up parent directories,
but later versions of Windows do not accept these forms. 

<p>Since the backslash character has a special meaning to the glob
command, glob patterns containing Windows style path separators
need special care. The pattern &ldquo;<i>C:\\foo\\*</i>&rdquo; is
interpreted as &ldquo;<i>C:\foo\*</i>&rdquo; where
&ldquo;<i>\f</i>&rdquo; will match the single character
&ldquo;<i>f</i>&rdquo; and &ldquo;<i>\*</i>&rdquo; will match the
single character &ldquo;<i>*</i>&rdquo; and will not be interpreted
as a wildcard character. One solution to this problem is to use the
Unix style forward slash as a path separator. Windows style paths
can be converted to Unix style paths with the command &ldquo;<b><a
href="../TclCmd/file.htm">file join</a></b> <b>$path</b>&rdquo; or
&ldquo;<b><a href="../TclCmd/file.htm">file normalize</a></b>
<b>$path</b>&rdquo;.</p>

<h3><a name="M20">EXAMPLES</a></h3>

Find all the Tcl files in the current directory: 

<pre>
<b>glob</b> *.tcl
</pre>

<p>Find all the Tcl files in the user's home directory,
irrespective of what the current directory is:</p>

<pre>
<b>glob</b> -directory ~ *.tcl
</pre>

<p>Find all subdirectories of the current directory:</p>

<pre>
<b>glob</b> -type d *
</pre>

<p>Find all files whose name contains an &ldquo;a&rdquo;, a
&ldquo;b&rdquo; or the sequence &ldquo;cde&rdquo;:</p>

<pre>
<b>glob</b> -type f *{a,b,cde}*
</pre>

<h3><a name="M21">SEE ALSO</a></h3>

<b><a href="../TclCmd/file.htm">file</a></b> 

<h3><a name="M22">KEYWORDS</a></h3>

<a href="../Keywords/E.htm#exist">exist</a>, <a href=
"../Keywords/F.htm#file">file</a>, <a href=
"../Keywords/G.htm#glob">glob</a>, <a href=
"../Keywords/P.htm#pattern">pattern</a> 

<div class="copy">Copyright &copy; 1995-1997 Roger E. Critchlow Jr.
Copyright &copy; 1993 The Regents of the University of California.
Copyright &copy; 1994-1996 Sun Microsystems, Inc.</div>
</body>
</html>

