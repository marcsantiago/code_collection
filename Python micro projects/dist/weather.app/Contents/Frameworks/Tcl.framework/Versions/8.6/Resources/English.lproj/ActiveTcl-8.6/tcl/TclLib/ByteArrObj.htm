<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Tcl Library Procedures - Tcl_ByteArrayObj manual
page</title>
<link rel="stylesheet" href="../docs.css" type="text/css" media=
"all">
</head>
<body>
<div class="banner">
<table width="100%" border="0" cellspacing="0" cellpadding="3">
<tr>
<td align="left"><a target="_blank" href=
"http://www.activestate.com/activetcl"><img src=
"../../images/ActiveTcl.gif" border="0" align="left" alt=
"ActiveTcl"></a> </td>
<td align="center" class="heading">ActiveTcl User Guide</td>
<td align="right"><a target="_blank" href=
"http://www.activestate.com"><img src="../../images/AS_logo.gif"
border="0" align="right" alt="ActiveState Software Inc."></a> </td>
</tr>
</table>
</div>

<br>
<h2><a href="../contents.htm">Tcl/Tk Documentation</a>
<small>&gt;</small> <a href="contents.htm">TclLib</a>
<small>&gt;</small> ByteArrObj</h2>

<h3><a href="../UserCmd/contents.htm">Tcl/Tk Applications</a> | <a
href="../TclCmd/contents.htm">Tcl Commands</a> | <a href=
"../TkCmd/contents.htm">Tk Commands</a> | <a href=
"../TclLib/contents.htm">Tcl Library</a> | <a href=
"../TkLib/contents.htm">Tk Library</a></h3>

<h3><a name="M2">NAME</a></h3>

Tcl_NewByteArrayObj, Tcl_SetByteArrayObj, Tcl_GetByteArrayFromObj,
Tcl_SetByteArrayLength - manipulate Tcl values as a arrays of bytes


<h3><a name="M3">SYNOPSIS</a></h3>

<b>#include &lt;tcl.h&gt;</b><br>
Tcl_Obj *<br>
<b>Tcl_NewByteArrayObj</b>(<i>bytes, length</i>)<br>
void <br>
<b>Tcl_SetByteArrayObj</b>(<i>objPtr, bytes, length</i>)<br>
unsigned char *<br>
<b>Tcl_GetByteArrayFromObj</b>(<i>objPtr, lengthPtr</i>)<br>
unsigned char *<br>
<b>Tcl_SetByteArrayLength</b>(<i>objPtr, length</i>)<br>
<h3><a name="M4">ARGUMENTS</a></h3>

<dl class="arguments">
<dt>const unsigned char <b>*bytes</b> (in)</dt>

<dd>The array of bytes used to initialize or set a byte-array
value. May be NULL even if <i>length</i> is non-zero.</dd>

<dt>int <b>length</b> (in)</dt>

<dd>The length of the array of bytes. It must be &gt;= 0.</dd>

<dt>Tcl_Obj <b>*objPtr</b> (in/out)</dt>

<dd>For <b>Tcl_SetByteArrayObj</b>, this points to the value to be
converted to byte-array type. For <b>Tcl_GetByteArrayFromObj</b>
and <b>Tcl_SetByteArrayLength</b>, this points to the value from
which to get the byte-array value; if <i>objPtr</i> does not
already point to a byte-array value, it will be converted to
one.</dd>

<dt>int <b>*lengthPtr</b> (out)</dt>

<dd>If non-NULL, filled with the length of the array of bytes in
the value.</dd>
</dl>

<h3><a name="M5">DESCRIPTION</a></h3>

These procedures are used to create, modify, and read Tcl
byte-array values from C code. Byte-array values are typically used
to hold the results of binary IO operations or data structures
created with the <b><a href="../TclCmd/binary.htm">binary</a></b>
command. In Tcl, an array of bytes is not equivalent to a string.
Conceptually, a string is an array of Unicode characters, while a
byte-array is an array of 8-bit quantities with no implicit
meaning. Accessor functions are provided to get the string
representation of a byte-array or to convert an arbitrary value to
a byte-array. Obtaining the string representation of a byte-array
value (by calling <b><a href=
"../TclLib/StringObj.htm">Tcl_GetStringFromObj</a></b>) produces a
properly formed UTF-8 sequence with a one-to-one mapping between
the bytes in the internal representation and the UTF-8 characters
in the string representation. 

<p><b>Tcl_NewByteArrayObj</b> and <b>Tcl_SetByteArrayObj</b> will
create a new value of byte-array type or modify an existing value
to have a byte-array type. Both of these procedures set the value's
type to be byte-array and set the value's internal representation
to a copy of the array of bytes given by <i>bytes</i>.
<b>Tcl_NewByteArrayObj</b> returns a pointer to a newly allocated
value with a reference count of zero. <b>Tcl_SetByteArrayObj</b>
invalidates any old string representation and, if the value is not
already a byte-array value, frees any old internal representation.
If <i>bytes</i> is NULL then the new byte array contains arbitrary
values.</p>

<p><b>Tcl_GetByteArrayFromObj</b> converts a Tcl value to
byte-array type and returns a pointer to the value's new internal
representation as an array of bytes. The length of this array is
stored in <i>lengthPtr</i> if <i>lengthPtr</i> is non-NULL. The
storage for the array of bytes is owned by the value and should not
be freed. The contents of the array may be modified by the caller
only if the value is not shared and the caller invalidates the
string representation.</p>

<p><b>Tcl_SetByteArrayLength</b> converts the Tcl value to
byte-array type and changes the length of the value's internal
representation as an array of bytes. If <i>length</i> is greater
than the space currently allocated for the array, the array is
reallocated to the new length; the newly allocated bytes at the end
of the array have arbitrary values. If <i>length</i> is less than
the space currently allocated for the array, the length of array is
reduced to the new length. The return value is a pointer to the
value's new array of bytes.</p>

<h3><a name="M6">SEE ALSO</a></h3>

<b><a href="../TclLib/StringObj.htm">Tcl_GetStringFromObj</a></b>,
<b><a href="../TclLib/Object.htm">Tcl_NewObj</a></b>, <b><a href=
"../TclLib/Object.htm">Tcl_IncrRefCount</a></b>, <b><a href=
"../TclLib/Object.htm">Tcl_DecrRefCount</a></b> 

<h3><a name="M7">KEYWORDS</a></h3>

<a href="../Keywords/V.htm#value">value</a>, <a href=
"../Keywords/B.htm#binary data">binary data</a>, <a href=
"../Keywords/B.htm#byte array">byte array</a>, <a href=
"../Keywords/U.htm#utf">utf</a>, <a href=
"../Keywords/U.htm#unicode">unicode</a>, <a href=
"../Keywords/I.htm#internationalization">internationalization</a> 

<div class="copy">Copyright &copy; 1995-1997 Roger E. Critchlow Jr.
Copyright &copy; 1997 Sun Microsystems, Inc.</div>
</body>
</html>

